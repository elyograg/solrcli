plugins {
	id 'java'
}

group = 'org.apache.solr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()	
}

dependencies {
	implementation group: 'info.picocli', name: 'picocli', version: '4+'
	implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7+'
	implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7+'
	implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7+'
	implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7+'
	implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2+'
	implementation group: 'com.lmax', name: 'disruptor', version: '3+'
	testImplementation('junit:junit:4+')
}

configurations.all {
	exclude group: 'ch.qos.logback'
	exclude group: 'commons-logging'
	exclude group: 'log4j'
	exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
}

tasks.named('test') {
	useJUnitPlatform()
}

task dist(type: Jar) {
	archiveBaseName = project.name + '-all'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	manifest {
		attributes 'Implementation-Title': 'Solr Control Program',
			'Implementation-Version': version,
			'Main-Class': 'org.apache.solr.cli.MainCommand',
			'Multi-Release': 'true'
	}
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}
